/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.azure.dfs.client.generated.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import org.apache.hadoop.classification.InterfaceAudience;
import org.apache.hadoop.classification.InterfaceStability;

/**
 * Defines values for ContentType.
 */
@InterfaceAudience.Public
@InterfaceStability.Evolving
public enum ContentType {
  /**
   * Enum value application/octet-stream.
   */
  APPLICATIONOCTET_STREAM("application/octet-stream"),

  /**
   * Enum value text/plain.
   */
  TEXTPLAIN("text/plain");

  /**
   * The actual serialized value for a ContentType instance.
   */
  private String value;

  ContentType(String value) {
    this.value = value;
  }

  /**
   * Parses a serialized value to a ContentType instance.
   *
   * @param value the serialized value to parse.
   * @return the parsed ContentType object, or null if unable to parse.
   */
  @JsonCreator
  public static ContentType fromString(String value) {
    ContentType[] items = ContentType.values();
    for (ContentType item : items) {
      if (item.toString().equalsIgnoreCase(value)) {
        return item;
      }
    }
    return null;
  }

  @JsonValue
  @Override
  public String toString() {
    return this.value;
  }
}
