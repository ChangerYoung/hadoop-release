/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.azure.bfs.rest.client.generated.models;

import com.microsoft.rest.RestException;
import okhttp3.ResponseBody;
import retrofit2.Response;

import org.apache.hadoop.classification.InterfaceStability;

/**
 * Exception thrown for an invalid response with ErrorSchema information.
 */
@InterfaceStability.Evolving
public class ErrorSchemaException extends RestException {
  /**
   * Initializes a new instance of the ErrorSchemaException class.
   *
   * @param message  the exception message or the response content if a message is not available
   * @param response the HTTP response
   */
  public ErrorSchemaException(final String message, final Response<ResponseBody> response) {
    super(message, response);
  }

  /**
   * Initializes a new instance of the ErrorSchemaException class.
   *
   * @param message  the exception message or the response content if a message is not available
   * @param response the HTTP response
   * @param body     the deserialized response body
   */
  public ErrorSchemaException(final String message, final Response<ResponseBody> response, final ErrorSchema body) {
    super(message, response, body);
  }

  @Override
  public ErrorSchema body() {
    return (ErrorSchema) super.body();
  }
}
